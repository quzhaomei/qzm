<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sf.qzm.dao.TalkHistoryDao">
 <cache eviction="LRU" flushInterval="60000" size="1024" readOnly="true" /> 
	<resultMap type="com.sf.qzm.dto.bis.TalkHistoryDTO" id="historyDTO">
		<id property="historyId" column="historyId" />
		<result property="fromId" column="fromId" />
		<result property="fromName" column="fromName" />
		<result property="fromHeadImg" column="fromHeadImg" />
		<result property="toId" column="toId" />
		<result property="toName" column="toName" />
		<result property="toHeadImg" column="toHeadImg" />
		
		<result property="message" column="message" />
		<result property="status" column="status" />
		
		<result property="createDate" column="createDate" />
	</resultMap>
	<resultMap type="com.sf.qzm.dto.bis.HistoryCountDTO" id="historyCountDTO">
		<result property="fromId" column="fromId" />
		<result property="fromName" column="fromName" />
		<result property="fromHeadImg" column="fromHeadImg" />
		
		<result property="checkCount" column="checkCount" />
		<result property="unCheckCount" column="unCheckCount" />
	</resultMap>
	
	<insert id="save"  useGeneratedKeys="true" keyProperty="history.historyId">
		insert into talk_history(`historyId`,`fromId`,`fromName`,`fromHeadImg`,`toId`,`toName`,
		`toHeadImg`,`message`,`status`,`createDate`)
		values
		(#{history.historyId},
		#{history.fromId},#{history.fromName},#{history.fromHeadImg},
		#{history.toId},#{history.toName},#{history.toHeadImg}
		,#{history.message},#{history.status},#{history.createDate})
	</insert>
	<update id="update">
		update talk_history set historyId=#{history.historyId}
		
		<if test="history.status!=null">
			,`status`=#{history.status}
		</if>
		where historyId=#{history.historyId};
	</update>
	<delete id="delete">
		delete from talk_history where 1=1
		<if test="history.historyId!=null">
			and historyId=#{history.historyId}
		</if>
		<if test="history.fromId!=null and history.toId!=null">
			and (
			`fromId`=#{history.fromId} and `toId`=#{history.toId}
			or 
			`fromId`=#{history.toId} and `toId`=#{history.fromId}
			)
		</if>
	</delete>
	<select id="getListByParam" resultMap="historyDTO">
		select `historyId`,`fromId`,`fromName`,`fromHeadImg`,`toId`,`toName`,
		`toHeadImg`,`message`,`status`,`createDate`
		 from talk_history where 1=1
		  <if test="history.fromId!=null and history.toId!=null">
			and (
			`fromId`=#{history.fromId} and `toId`=#{history.toId}
			or 
			`fromId`=#{history.toId} and `toId`=#{history.fromId}
			)
		</if>
		<if test="history.status!=null">
			and `status`=#{history.status}
		</if>
		order by historyId asc
	</select>
	<select id="getByParam" resultMap="historyDTO">
		select `historyId`,`fromId`,`fromName`,`fromHeadImg`,`toId`,`toName`,
		`toHeadImg`,`message`,`status`,`createDate`
		 from talk_history where 1=1
		<if test="history.historyId!=null">
			and `historyId`=#{history.historyId}
		</if>
	</select>
	<select id="getCountByParam" resultType="int">
		select count(*)
		 from talk_history where 1=1
		 <if test="history.fromId!=null and history.toId!=null">
			and (
			`fromId`=#{history.fromId} and `toId`=#{history.toId}
			or 
			`fromId`=#{history.toId} and `toId`=#{history.fromId}
			)
		</if>
		<if test="history.status!=null">
			and `status`=#{history.status}
		</if>
	</select>
	<select id="getPageByParam" resultMap="historyDTO">
		select `historyId`,`fromId`,`fromName`,`fromHeadImg`,`toId`,`toName`,
		`toHeadImg`,`message`,`status`,`createDate`
		 from talk_history where 1=1
		 <if test="page.param.fromId!=null and page.param.toId!=null">
			and (
			`fromId`=#{page.param.fromId} and `toId`=#{page.param.toId}
			or 
			`fromId`=#{page.param.toId} and `toId`=#{page.param.fromId}
			)
		</if>
		<if test="page.param.status!=null">
			and `status`=#{page.param.status}
		</if>
		order by createDate desc
		 limit ${page.pageSize*(page.pageIndex-1)},${page.pageSize}
	</select>
	
	<select id="loadHistory" resultMap="historyCountDTO">
		select `fromId`,`fromName`,`fromHeadImg`,sum(case `status` when 0 then 1 else 0 end) `unCheckCount`
		,sum(case `status` when 1 then 1 else 0 end) `checkCount` from
		talk_history  
		where  toId=#{toId}
		group by `fromId`,`fromName`,`fromHeadImg`
		order by max(createDate) desc
	</select>
</mapper>  