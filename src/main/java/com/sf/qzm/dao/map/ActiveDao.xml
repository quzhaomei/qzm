<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sf.qzm.dao.ActiveDao">
<cache eviction="LRU" flushInterval="60000" size="1024" readOnly="true"/>
<resultMap type="com.sf.qzm.bean.ac.ActiveCol" id="colDto">
	<id property="id" column="id"/>
	<result property="name" column="name" />
	<result property="activeId" column="activeId" />
	<result property="property" column="property" />
	<result property="type" column="type" />
	<result property="require" column="require" />
	<result property="resource" column="resource" />
</resultMap>
<resultMap type="com.sf.qzm.bean.ac.Active" id="active">
	<id property="id" column="id"/>
	<result property="name" column="name" />
	<result property="description" column="description" />
</resultMap>
	<select id="getById" resultMap="active">
		select id,name,description from active  where id=#{id};
	</select>
	<select id="getDataById" resultType="java.util.HashMap">
		call selectActive(#{id});
	</select>
	<select id="getValId" resultType="int">
		select getValId();
	</select>
	<select id="getColById" resultMap="colDto">
		select id,name,activeId,property,type,`require`,`resource` from active_col where activeId=#{id};
	</select>
	<select id="getColByIdAndPro" resultMap="colDto">
		select id,name,activeId,property,type,`require`,`resource` from active_col where activeId=#{id}
		and property=#{property};
	</select>
	
	<insert id="saveVal" >
		insert into active_val(valId,colId,value)values
		<foreach collection="vals"  item="temp" separator="," >  
			(#{valId},#{temp.colId},#{temp.value})
		</foreach>
	</insert>
	<delete id="truncateActive">
		delete av.* from active_val av left join active_col ac on
		ac.id=av.colId left join active a on a.id=ac.activeId
		where a.id=#{activeId};
	</delete>
</mapper>  